======================Reduction starts======================

The spar tree is the following.
compilationUnit {id=1}
|___(+) {id=3,slot_type=topStatSeq}
    |___alternative__tmplDef_3 {id=6,slot_type=topStat}
        |___Token:object {id=7,slot_type=Token}
        |___objectDef {id=8,slot_type=objectDef}
            |___Token:Hello {id=9,slot_type=Id}
            |___(?) {id=11,slot_type=classTemplateOpt}
                |___templateBody {id=13,slot_type=classTemplateOpt_2}
                    |___Token:{ {id=14,slot_type=Token}
                    |___(+) {id=15,slot_type=kleene_plus__templateBody_3}
                    |   |___def {id=19,slot_type=templateStat}
                    |       |___Token:def {id=20,slot_type=Token}
                    |       |___funDef {id=21,slot_type=funDef}
                    |           |___funSig {id=22,slot_type=funSig}
                    |           |   |___Token:main {id=109,slot_type=Id}
                    |           |   |___(*) {id=111,slot_type=paramClauses}
                    |           |       |___paramClause {id=112,slot_type=paramClause}
                    |           |           |___Token:( {id=113,slot_type=Token}
                    |           |           |___(?) {id=114,slot_type=optional__paramClause_2}
                    |           |           |   |___param {id=117,slot_type=params}
                    |           |           |       |___Token:args {id=118,slot_type=Id}
                    |           |           |       |___(?) {id=119,slot_type=optional__param_3}
                    |           |           |           |___param_2 {id=120,slot_type=param_2}
                    |           |           |               |___Token:: {id=121,slot_type=Token}
                    |           |           |               |___simpleType {id=127,slot_type=paramType}
                    |           |           |                   |___Token:Array {id=146,slot_type=simpleType_5}
                    |           |           |                   |___(*) {id=129,slot_type=kleene_star__simpleType_3}
                    |           |           |                       |___typeArgs {id=131,slot_type=simpleType_4}
                    |           |           |                           |___Token:[ {id=132,slot_type=Token}
                    |           |           |                           |___Token:String {id=143,slot_type=types}
                    |           |           |                           |___Token:] {id=134,slot_type=Token}
                    |           |           |___Token:) {id=115,slot_type=Token}
                    |           |___alternative__funDef_5 {id=23,slot_type=alternative__funDef_5}
                    |               |___Token:= {id=24,slot_type=Token}
                    |               |___blockExpr {id=32,slot_type=expr}
                    |                   |___Token:{ {id=33,slot_type=Token}
                    |                   |___(+) {id=37,slot_type=alternative__blockExpr_1}
                    |                   |   |___infixExpr {id=42,slot_type=blockStat}
                    |                   |       |___simpleExpr1 {id=86,slot_type=prefixExpr}
                    |                   |       |   |___Token:println {id=108,slot_type=simpleExpr1_6}
                    |                   |       |   |___(*) {id=88,slot_type=kleene_star__simpleExpr1_4}
                    |                   |       |       |___argumentExprs {id=90,slot_type=simpleExpr1_5}
                    |                   |       |           |___Token:( {id=91,slot_type=Token}
                    |                   |       |           |___(?) {id=94,slot_type=alternative__argumentExprs_5}
                    |                   |       |           |   |___Token:"line 1" {id=105,slot_type=exprs}
                    |                   |       |           |___Token:) {id=93,slot_type=Token}
                    |                   |       |___(*) {id=44,slot_type=kleene_star__infixExpr_2}
                    |                   |           |___infixExpr_3 {id=45,slot_type=infixExpr_3}
                    |                   |               |___Token:println {id=46,slot_type=Id}
                    |                   |               |___infixExpr {id=47,slot_type=infixExpr}
                    |                   |                   |___simpleExpr1_6 {id=71,slot_type=prefixExpr}
                    |                   |                   |   |___Token:( {id=72,slot_type=Token}
                    |                   |                   |   |___(?) {id=73,slot_type=optional__simpleExpr1_1}
                    |                   |                   |   |   |___Token:"Hello, world" {id=85,slot_type=exprs}
                    |                   |                   |   |___Token:) {id=74,slot_type=Token}
                    |                   |                   |___(*) {id=49,slot_type=kleene_star__infixExpr_2}
                    |                   |                       |___infixExpr_3 {id=50,slot_type=infixExpr_3}
                    |                   |                           |___Token:println {id=51,slot_type=Id}
                    |                   |                           |___simpleExpr1_6 {id=55,slot_type=infixExpr}
                    |                   |                               |___Token:( {id=56,slot_type=Token}
                    |                   |                               |___(?) {id=57,slot_type=optional__simpleExpr1_1}
                    |                   |                               |   |___Token:"line 2" {id=69,slot_type=exprs}
                    |                   |                               |___Token:) {id=58,slot_type=Token}
                    |                   |___Token:} {id=35,slot_type=Token}
                    |___Token:} {id=16,slot_type=Token}
------------------------------------------------------------


==================Reducing node 3, size=29==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 3
------------------------------------------------------------


==================Reducing node 6, size=29==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 6
------------------------------------------------------------


==================Reducing node 7, size=29==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 7
------------------------------------------------------------


==================Reducing node 8, size=29==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 8
------------------------------------------------------------


==================Reducing node 9, size=29==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 9
------------------------------------------------------------


=================Reducing node 11, size=29==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 11
------------------------------------------------------------


=================Reducing node 13, size=29==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=13}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 13
------------------------------------------------------------


=================Reducing node 14, size=29==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 14
------------------------------------------------------------


=================Reducing node 15, size=29==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 15
------------------------------------------------------------


=================Reducing node 16, size=29==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 16
------------------------------------------------------------


=================Reducing node 19, size=29==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
            main
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
                                        {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 19
------------------------------------------------------------


=================Reducing node 20, size=29==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 20
------------------------------------------------------------


=================Reducing node 21, size=29==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 21
------------------------------------------------------------


=================Reducing node 22, size=29==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main                      = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def      args                 = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 22
------------------------------------------------------------


=================Reducing node 23, size=29==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 23
------------------------------------------------------------


=================Reducing node 109, size=29=================

The current best program is the following

    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 109
------------------------------------------------------------


=================Reducing node 111, size=29=================

The current best program is the following

    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello {
        def main                      = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 111
------------------------------------------------------------


=================Reducing node 24, size=29==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 24
------------------------------------------------------------


=================Reducing node 32, size=29==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) = {
            println("line 1")
            println("Hello, world")
            println("line 2")
        }
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args: Array[String]) =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 8
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 32 from 29 to 27
------------------------------------------------------------


=================Reducing node 112, size=27=================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    object Hello {
        def main                      =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 112
------------------------------------------------------------


=================Reducing node 42, size=27==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args: Array[String]) =
            println
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args: Array[String]) =
            println("line 1")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args: Array[String]) =
                   ("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 42
------------------------------------------------------------


=================Reducing node 113, size=27=================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 113
------------------------------------------------------------


=================Reducing node 114, size=27=================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello {
        def main(                   ) =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 114
------------------------------------------------------------


=================Reducing node 115, size=27=================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 115
------------------------------------------------------------


=================Reducing node 86, size=27==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("line 1")
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    object Hello {
        def main(args: Array[String]) =
                    "line 1"
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 7
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 86 from 27 to 24
------------------------------------------------------------


=================Reducing node 44, size=24==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello {
        def main(args: Array[String]) =
            println
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 44
------------------------------------------------------------


=================Reducing node 117, size=24=================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    object Hello {
        def main(                   ) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args               ) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(      Array        ) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 117
------------------------------------------------------------


=================Reducing node 108, size=24=================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 108
------------------------------------------------------------


=================Reducing node 45, size=24==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=45}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]kleene replacement
    object Hello {
        def main(args: Array[String]) =
            println
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args: Array[String]) =
            println
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 45
------------------------------------------------------------


=================Reducing node 118, size=24=================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 118
------------------------------------------------------------


=================Reducing node 119, size=24=================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello {
        def main(args               ) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 119
------------------------------------------------------------


=================Reducing node 46, size=24==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 46
------------------------------------------------------------


=================Reducing node 47, size=24==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
            println("line 2")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args: Array[String]) =
            println
            println
            println
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    object Hello {
        def main(args: Array[String]) =
            println
            println
                   ("line 2")
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 10
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 47 from 24 to 20
------------------------------------------------------------


=================Reducing node 120, size=20=================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    object Hello {
        def main(args               ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 120
------------------------------------------------------------


=================Reducing node 71, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args: Array[String]) =
            println
            println "Hello, world"
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 71
------------------------------------------------------------


=================Reducing node 121, size=20=================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 121
------------------------------------------------------------


=================Reducing node 127, size=20=================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args: Array        ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args:       String ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 127
------------------------------------------------------------


=================Reducing node 72, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 72
------------------------------------------------------------


=================Reducing node 73, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello {
        def main(args: Array[String]) =
            println
            println(              )
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 73
------------------------------------------------------------


=================Reducing node 74, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 74
------------------------------------------------------------


=================Reducing node 146, size=20=================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 146
------------------------------------------------------------


=================Reducing node 129, size=20=================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello {
        def main(args: Array        ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 129
------------------------------------------------------------


=================Reducing node 85, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 85
------------------------------------------------------------


=================Reducing node 131, size=20=================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=131}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 131
------------------------------------------------------------


=================Reducing node 132, size=20=================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 132
------------------------------------------------------------


=================Reducing node 143, size=20=================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 143
------------------------------------------------------------


=================Reducing node 134, size=20=================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 134
------------------------------------------------------------


==================Reducing node 3, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 3
------------------------------------------------------------


==================Reducing node 6, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 6
------------------------------------------------------------


==================Reducing node 7, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 7
------------------------------------------------------------


==================Reducing node 8, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 8
------------------------------------------------------------


==================Reducing node 9, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 9
------------------------------------------------------------


=================Reducing node 11, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 11
------------------------------------------------------------


=================Reducing node 13, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=13}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 13
------------------------------------------------------------


=================Reducing node 14, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 14
------------------------------------------------------------


=================Reducing node 15, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 15
------------------------------------------------------------


=================Reducing node 16, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 16
------------------------------------------------------------


=================Reducing node 19, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
            main
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 19
------------------------------------------------------------


=================Reducing node 20, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 20
------------------------------------------------------------


=================Reducing node 21, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 21
------------------------------------------------------------


=================Reducing node 22, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main                      =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def      args                 =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 22
------------------------------------------------------------


=================Reducing node 23, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 23
------------------------------------------------------------


=================Reducing node 57, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 57
------------------------------------------------------------


=================Reducing node 59, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello {
        def main                      =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 59
------------------------------------------------------------


=================Reducing node 24, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 24
------------------------------------------------------------


=================Reducing node 29, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args: Array[String]) =
            println
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args: Array[String]) =
            println
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args: Array[String]) =
                   ("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 29
------------------------------------------------------------


=================Reducing node 60, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=60}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 60
------------------------------------------------------------


=================Reducing node 56, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 56
------------------------------------------------------------


=================Reducing node 31, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello {
        def main(args: Array[String]) =
            println
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 31
------------------------------------------------------------


=================Reducing node 61, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 61
------------------------------------------------------------


=================Reducing node 62, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello {
        def main(                   ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 62
------------------------------------------------------------


=================Reducing node 63, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 63
------------------------------------------------------------


=================Reducing node 32, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=32}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 32
------------------------------------------------------------


=================Reducing node 65, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=65}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args               ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(      Array        ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 65
------------------------------------------------------------


=================Reducing node 33, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 33
------------------------------------------------------------


=================Reducing node 37, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args: Array[String]) =
            println
            println "Hello, world"
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 37
------------------------------------------------------------


=================Reducing node 66, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 66
------------------------------------------------------------


=================Reducing node 67, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello {
        def main(args               ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 67
------------------------------------------------------------


=================Reducing node 38, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 38
------------------------------------------------------------


=================Reducing node 39, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello {
        def main(args: Array[String]) =
            println
            println(              )
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 39
------------------------------------------------------------


=================Reducing node 40, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 40
------------------------------------------------------------


=================Reducing node 68, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=68}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 68
------------------------------------------------------------


=================Reducing node 51, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51
------------------------------------------------------------


=================Reducing node 69, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 69
------------------------------------------------------------


=================Reducing node 75, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args: Array        ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args:       String ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 75
------------------------------------------------------------


=================Reducing node 94, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 94
------------------------------------------------------------


=================Reducing node 77, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello {
        def main(args: Array        ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 77
------------------------------------------------------------


=================Reducing node 79, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=79}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 79
------------------------------------------------------------


=================Reducing node 80, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 80
------------------------------------------------------------


=================Reducing node 91, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 91
------------------------------------------------------------


=================Reducing node 82, size=20==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 82
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@14
    object Hello {
        def main(
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@14
    object Hello {
        def main
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@14
    object Hello {
        def
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@14
    object Hello {
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@14
    object Hello
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@14
    object
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@14
    println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    object Hello {
        def main(args
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    object Hello {
        def main(
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    object Hello {
        def main
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    object Hello {
        def
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    object Hello {
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    object Hello
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    object
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    object Hello {
        def main(args:
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    object Hello {
        def main(args
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    object Hello {
        def main(
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    object Hello {
        def main
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    object Hello {
        def
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    object Hello {
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    object Hello
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    object
                                      =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    object Hello {
        def main(args: Array
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    object Hello {
        def main(args:
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    object Hello {
        def main(args
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    object Hello {
        def main(
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    object Hello {
        def main
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    object Hello {
        def
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    object Hello {
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    object Hello
                                      =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    object
                                    ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    ]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    object Hello {
        def main(args: Array[
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    object Hello {
        def main(args: Array
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    object Hello {
        def main(args:
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    object Hello {
        def main(args
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    object Hello {
        def main(
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    object Hello {
        def main
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    object Hello {
        def
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    object Hello {
                                      =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    object Hello
                                    ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    object
                                   ]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object Hello {
        def main(args: Array[String
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object Hello {
        def main(args: Array[
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object Hello {
        def main(args: Array
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object Hello {
        def main(args:
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object Hello {
        def main(args
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object Hello {
        def main(
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object Hello {
        def main
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object Hello {
        def                           =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object Hello {
                                    ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object Hello
                                   ]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object
                             String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    [String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello {
        def main(args: Array[String]
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello {
        def main(args: Array[String
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello {
        def main(args: Array[
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello {
        def main(args: Array
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello {
        def main(args:
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello {
        def main(args
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello {
        def main(
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello {
        def main                      =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello {
        def                         ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello {
                                   ]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello
                             String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object
                            [String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
        def main(args: Array[String])
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
        def main(args: Array[String]
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
        def main(args: Array[String
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
        def main(args: Array[
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
        def main(args: Array
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
        def main(args:
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
        def main(args
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
        def main(                     =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
        def main                    ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
        def                        ]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
                             String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello
                            [String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object
                       Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    : Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def main(args: Array[String]) =
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def main(args: Array[String])
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def main(args: Array[String]
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def main(args: Array[String
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def main(args: Array[
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def main(args: Array
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def main(args:
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def main(args                 =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def main(                   ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def main                   ]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def                  String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
                            [String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello
                       Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object
                     : Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main(args: Array[String]) =
            println
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main(args: Array[String]) =
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main(args: Array[String])
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main(args: Array[String]
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main(args: Array[String
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main(args: Array[
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main(args: Array
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main(args:                =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main(args               ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main(                  ]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main             String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def                 [String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
                       Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello
                     : Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object
                 args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    (args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(args: Array[String]) =
            println
            println
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(args: Array[String]) =
            println
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(args: Array[String]) =
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(args: Array[String])
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(args: Array[String]
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(args: Array[String
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(args: Array[
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(args: Array          =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(args:              ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(args              ]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(            String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main            [String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def            Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
                     : Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello
                 args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object
                (args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args: Array[String]) =
            println
            println(
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args: Array[String]) =
            println
            println
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args: Array[String]) =
            println
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args: Array[String]) =
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args: Array[String])
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args: Array[String]
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args: Array[String
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args: Array[         =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args: Array        ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args:             ]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args        String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(           [String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main       Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def          : Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
                 args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello
                (args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object
            main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world"
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args: Array[String]) =
            println
            println(
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args: Array[String]) =
            println
            println               )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args: Array[String]) =
            println
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args: Array[String]) =
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args: Array[String])
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args: Array[String]
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args: Array[String   =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args: Array[       ) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args: Array       ]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args:       String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args       [String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(      Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main     : Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def      args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
                (args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello
            main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    {
        def main(args: Array[String]) =
            println
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=51}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world")
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args: Array[String]) =
            println
            println("Hello, world"
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args: Array[String]) =
            println
            println "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args: Array[String]) =
            println
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: token slicer@1
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 0 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 203
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args: Array[String])
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args: Array[String]  =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args: Array[String ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args: Array[      ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args: Array String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args:      [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args  Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(    : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def     (args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
            main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object       {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==================Reducing node 3, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 3
------------------------------------------------------------


==================Reducing node 6, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 6
------------------------------------------------------------


==================Reducing node 7, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 7
------------------------------------------------------------


==================Reducing node 8, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 8
------------------------------------------------------------


==================Reducing node 9, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 9
------------------------------------------------------------


=================Reducing node 11, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 11
------------------------------------------------------------


=================Reducing node 13, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=13}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 13
------------------------------------------------------------


=================Reducing node 14, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 14
------------------------------------------------------------


=================Reducing node 15, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 15
------------------------------------------------------------


=================Reducing node 16, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 16
------------------------------------------------------------


=================Reducing node 19, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
            main
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 19
------------------------------------------------------------


=================Reducing node 20, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 20
------------------------------------------------------------


=================Reducing node 21, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 21
------------------------------------------------------------


=================Reducing node 22, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main                      =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def      args                 =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 22
------------------------------------------------------------


=================Reducing node 23, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 23
------------------------------------------------------------


=================Reducing node 54, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54
------------------------------------------------------------


=================Reducing node 56, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello {
        def main                      =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 56
------------------------------------------------------------


=================Reducing node 24, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 24
------------------------------------------------------------


=================Reducing node 31, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args: Array[String]) =
            println
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args: Array[String]) =
                    "Hello, world"
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 31
------------------------------------------------------------


=================Reducing node 57, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=57}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 57
------------------------------------------------------------


=================Reducing node 53, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 53
------------------------------------------------------------


=================Reducing node 33, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello {
        def main(args: Array[String]) =
            println
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 33
------------------------------------------------------------


=================Reducing node 58, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 58
------------------------------------------------------------


=================Reducing node 59, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello {
        def main(                   ) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 59
------------------------------------------------------------


=================Reducing node 60, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 60
------------------------------------------------------------


=================Reducing node 35, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=35}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 35
------------------------------------------------------------


=================Reducing node 62, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=62}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args               ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(      Array        ) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 62
------------------------------------------------------------


=================Reducing node 36, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 36
------------------------------------------------------------


=================Reducing node 39, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello {
        def main(args: Array[String]) =
            println(              )
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 39
------------------------------------------------------------


=================Reducing node 38, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 38
------------------------------------------------------------


=================Reducing node 63, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 63
------------------------------------------------------------


=================Reducing node 64, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello {
        def main(args               ) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 64
------------------------------------------------------------


=================Reducing node 50, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50
------------------------------------------------------------


=================Reducing node 65, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=65}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 65
------------------------------------------------------------


=================Reducing node 66, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 66
------------------------------------------------------------


=================Reducing node 72, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args: Array        ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    object Hello {
        def main(args:       String ) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 72
------------------------------------------------------------


=================Reducing node 91, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 91
------------------------------------------------------------


=================Reducing node 74, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    object Hello {
        def main(args: Array        ) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 74
------------------------------------------------------------


=================Reducing node 76, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=76}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 76
------------------------------------------------------------


=================Reducing node 77, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 77
------------------------------------------------------------


=================Reducing node 88, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 88
------------------------------------------------------------


=================Reducing node 79, size=19==================

The current best program is the following

    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 79
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@14
    object Hello {
        def main
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@14
    object Hello {
        def
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@14
    object Hello {
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@14
    object Hello
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@14
    object
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@14
    println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    object Hello {
        def main(
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    object Hello {
        def main
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    object Hello {
        def
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    object Hello {
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    object Hello
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    object
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@13
    =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    object Hello {
        def main(args
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    object Hello {
        def main(
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    object Hello {
        def main
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    object Hello {
        def
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    object Hello {
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    object Hello
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    object
                                      =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@12
    ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    object Hello {
        def main(args:
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    object Hello {
        def main(args
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    object Hello {
        def main(
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    object Hello {
        def main
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    object Hello {
        def
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    object Hello {
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    object Hello
                                      =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    object
                                    ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@11
    ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    object Hello {
        def main(args: Array
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    object Hello {
        def main(args:
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    object Hello {
        def main(args
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    object Hello {
        def main(
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    object Hello {
        def main
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    object Hello {
        def
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    object Hello {
                                      =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    object Hello
                                    ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    object
                                   ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@10
    String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object Hello {
        def main(args: Array[
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object Hello {
        def main(args: Array
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object Hello {
        def main(args:
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object Hello {
        def main(args
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object Hello {
        def main(
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object Hello {
        def main
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object Hello {
        def                           =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object Hello {
                                    ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object Hello
                                   ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    object
                             String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@9
    [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello {
        def main(args: Array[String
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello {
        def main(args: Array[
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello {
        def main(args: Array
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello {
        def main(args:
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello {
        def main(args
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello {
        def main(
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello {
        def main                      =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello {
        def                         ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello {
                                   ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object Hello
                             String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    object
                            [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@8
    Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
        def main(args: Array[String]
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
        def main(args: Array[String
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
        def main(args: Array[
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
        def main(args: Array
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
        def main(args:
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
        def main(args
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
        def main(                     =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
        def main                    ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
        def                        ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello {
                             String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object Hello
                            [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    object
                       Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@7
    : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def main(args: Array[String])
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def main(args: Array[String]
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def main(args: Array[String
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def main(args: Array[
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def main(args: Array
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def main(args:
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def main(args                 =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def main(                   ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def main                   ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
        def                  String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello {
                            [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object Hello
                       Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    object
                     : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@6
    args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main(args: Array[String]) =
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main(args: Array[String])
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main(args: Array[String]
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main(args: Array[String
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main(args: Array[
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main(args: Array
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main(args:                =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main(args               ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main(                  ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def main             String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
        def                 [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello {
                       Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object Hello
                     : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    object
                 args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@5
    (args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(args: Array[String]) =
            println
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(args: Array[String]) =
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(args: Array[String])
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(args: Array[String]
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(args: Array[String
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(args: Array[
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(args: Array          =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(args:              ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(args              ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main(            String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def main            [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
        def            Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello {
                     : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object Hello
                 args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    object
                (args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@4
    main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args: Array[String]) =
            println(
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args: Array[String]) =
            println
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args: Array[String]) =
                                  )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args: Array[String])
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args: Array[String]
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args: Array[String
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args: Array[         =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args: Array        ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args:             ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(args        String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main(           [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def main       Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
        def          : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello {
                 args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object Hello
                (args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    object
            main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@3
    def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world"
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args: Array[String]) =
            println(
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args: Array[String]) =
            println               )
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args: Array[String]) =
                    "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args: Array[String])
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args: Array[String]
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args: Array[String   =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args: Array[       ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args: Array       ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args:       String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(args       [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main(      Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def main     : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
        def      args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello {
                (args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object Hello
            main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    object
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@2
    {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=50}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world")
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args: Array[String]) =
            println("Hello, world"
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args: Array[String]) =
            println "Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args: Array[String]) =
                   ("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args: Array[String])
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args: Array[String]  =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args: Array[String ) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args: Array[      ]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args: Array String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args:      [String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(args  Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main(    : Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def main args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
        def     (args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello {
            main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object Hello
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    object       {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: token slicer@1
    Hello {
        def main(args: Array[String]) =
            println("Hello, world")
    }
------------------------------------------------------------


#test success = 4
#test failure = 425
#test result cache hits = 0
#test execution cancelled = 2
#node edit action set cache hits = 17
