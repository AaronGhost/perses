======================Reduction starts======================

The spar tree is the following.
translationUnit {id=1}
|___(+) {id=2,slot_type=kleene_plus__translationUnit_3}
    |___declaration {id=319,slot_type=translationUnit_2}
    |   |___(+) {id=356,slot_type=declarationSpecifiers}
    |   |   |___Token:int {id=359,slot_type=declarationSpecifier}
    |   |___(?) {id=321,slot_type=optional__declaration_2}
    |   |   |___directDeclarator {id=326,slot_type=initDeclaratorList}
    |   |       |___Token:printf {id=355,slot_type=directDeclarator_8}
    |   |       |___(*) {id=328,slot_type=kleene_star__directDeclarator_6}
    |   |           |___directDeclarator_7 {id=329,slot_type=directDeclarator_7}
    |   |               |___Token:( {id=330,slot_type=LeftParen}
    |   |               |___parameterTypeList {id=333,slot_type=alternative__directDeclarator_9}
    |   |               |   |___parameterDeclaration {id=339,slot_type=parameterList}
    |   |               |   |   |___(+) {id=348,slot_type=declarationSpecifiers}
    |   |               |   |   |   |___Token:const {id=354,slot_type=declarationSpecifier}
    |   |               |   |   |   |___Token:char {id=352,slot_type=declarationSpecifier}
    |   |               |   |   |___(?) {id=342,slot_type=alternative__parameterDeclaration_2}
    |   |               |   |       |___Token:* {id=347,slot_type=abstractDeclarator}
    |   |               |   |___(?) {id=335,slot_type=optional__parameterTypeList_2}
    |   |               |       |___parameterTypeList_1 {id=336,slot_type=parameterTypeList_1}
    |   |               |           |___Token:, {id=337,slot_type=Comma}
    |   |               |           |___Token:... {id=338,slot_type=Ellipsis}
    |   |               |___Token:) {id=332,slot_type=RightParen}
    |   |___Token:; {id=322,slot_type=Semi}
    |___functionDefinition {id=5,slot_type=translationUnit_2}
        |___(?) {id=6,slot_type=optional__functionDefinition_2}
        |   |___(+) {id=315,slot_type=declarationSpecifiers}
        |       |___Token:int {id=318,slot_type=declarationSpecifier}
        |___directDeclarator {id=268,slot_type=declarator}
        |   |___Token:main {id=313,slot_type=directDeclarator_8}
        |   |___(*) {id=270,slot_type=kleene_star__directDeclarator_6}
        |       |___directDeclarator_7 {id=271,slot_type=directDeclarator_7}
        |           |___Token:( {id=272,slot_type=LeftParen}
        |           |___parameterList {id=276,slot_type=alternative__directDeclarator_9}
        |           |   |___(+) {id=305,slot_type=parameterDeclaration}
        |           |   |   |___Token:int {id=312,slot_type=declarationSpecifier}
        |           |   |   |___Token:argc {id=310,slot_type=declarationSpecifier}
        |           |   |___(*) {id=278,slot_type=kleene_star__parameterList_1}
        |           |       |___parameterList_2 {id=279,slot_type=parameterList_2}
        |           |           |___Token:, {id=280,slot_type=Comma}
        |           |           |___parameterDeclaration {id=281,slot_type=parameterDeclaration}
        |           |               |___(+) {id=299,slot_type=declarationSpecifiers}
        |           |               |   |___Token:char {id=302,slot_type=declarationSpecifier}
        |           |               |___declarator {id=284,slot_type=alternative__parameterDeclaration_2}
        |           |                   |___(?) {id=285,slot_type=optional__declarator_1}
        |           |                   |   |___Token:* {id=298,slot_type=pointer}
        |           |                   |___directDeclarator {id=286,slot_type=directDeclarator}
        |           |                       |___Token:argv {id=294,slot_type=directDeclarator_8}
        |           |                       |___(*) {id=288,slot_type=kleene_star__directDeclarator_6}
        |           |                           |___directDeclarator_7 {id=289,slot_type=directDeclarator_7}
        |           |                               |___Token:[ {id=290,slot_type=LeftBracket}
        |           |                               |___Token:] {id=292,slot_type=RightBracket}
        |           |___Token:) {id=274,slot_type=RightParen}
        |___compoundStatement {id=8,slot_type=compoundStatement}
            |___Token:{ {id=9,slot_type=LeftBrace}
            |___(?) {id=10,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=13,slot_type=blockItemList}
            |       |___declaration {id=233,slot_type=blockItemList_2}
            |       |   |___(+) {id=264,slot_type=declarationSpecifiers}
            |       |   |   |___Token:int {id=267,slot_type=declarationSpecifier}
            |       |   |___(?) {id=235,slot_type=optional__declaration_2}
            |       |   |   |___initDeclarator {id=238,slot_type=initDeclaratorList}
            |       |   |       |___Token:a {id=263,slot_type=declarator}
            |       |   |       |___(?) {id=240,slot_type=optional__initDeclarator_2}
            |       |   |           |___initDeclarator_1 {id=241,slot_type=initDeclarator_1}
            |       |   |               |___Token:= {id=242,slot_type=Assign}
            |       |   |               |___Token:1 {id=260,slot_type=initializer}
            |       |   |___Token:; {id=236,slot_type=Semi}
            |       |___declaration {id=108,slot_type=blockItemList_2}
            |       |   |___(+) {id=229,slot_type=declarationSpecifiers}
            |       |   |   |___Token:int {id=232,slot_type=declarationSpecifier}
            |       |   |___(?) {id=110,slot_type=optional__declaration_2}
            |       |   |   |___initDeclarator {id=113,slot_type=initDeclaratorList}
            |       |   |       |___Token:b {id=228,slot_type=declarator}
            |       |   |       |___(?) {id=115,slot_type=optional__initDeclarator_2}
            |       |   |           |___initDeclarator_1 {id=116,slot_type=initDeclarator_1}
            |       |   |               |___Token:= {id=117,slot_type=Assign}
            |       |   |               |___postfixExpression_4 {id=134,slot_type=initializer}
            |       |   |                   |___alternative__primaryExpression_5 {id=135,slot_type=alternative__primaryExpression_5}
            |       |   |                   |   |___Token:( {id=137,slot_type=LeftParen}
            |       |   |                   |   |___postfixExpression_4 {id=154,slot_type=expression}
            |       |   |                   |       |___alternative__primaryExpression_5 {id=155,slot_type=alternative__primaryExpression_5}
            |       |   |                   |       |   |___Token:( {id=157,slot_type=LeftParen}
            |       |   |                   |       |   |___additiveExpression {id=169,slot_type=expression}
            |       |   |                   |       |       |___postfixExpression_4 {id=184,slot_type=multiplicativeExpression}
            |       |   |                   |       |       |   |___alternative__primaryExpression_5 {id=185,slot_type=alternative__primaryExpression_5}
            |       |   |                   |       |       |   |   |___Token:( {id=187,slot_type=LeftParen}
            |       |   |                   |       |       |   |   |___postfixExpression_4 {id=204,slot_type=expression}
            |       |   |                   |       |       |   |       |___alternative__primaryExpression_5 {id=205,slot_type=alternative__primaryExpression_5}
            |       |   |                   |       |       |   |       |   |___Token:( {id=207,slot_type=LeftParen}
            |       |   |                   |       |       |   |       |   |___Token:a {id=225,slot_type=expression}
            |       |   |                   |       |       |   |       |___Token:) {id=206,slot_type=RightParen}
            |       |   |                   |       |       |   |___Token:) {id=186,slot_type=RightParen}
            |       |   |                   |       |       |___(*) {id=171,slot_type=kleene_star__additiveExpression_1}
            |       |   |                   |       |           |___additiveExpression_2 {id=172,slot_type=additiveExpression_2}
            |       |   |                   |       |               |___Token:+ {id=180,slot_type=alternative__additiveExpression_3}
            |       |   |                   |       |               |___Token:1 {id=179,slot_type=multiplicativeExpression}
            |       |   |                   |       |___Token:) {id=156,slot_type=RightParen}
            |       |   |                   |___Token:) {id=136,slot_type=RightParen}
            |       |   |___Token:; {id=111,slot_type=Semi}
            |       |___expressionStatement {id=43,slot_type=blockItemList_2}
            |       |   |___(?) {id=44,slot_type=optional__postfixExpression_1}
            |       |   |   |___postfixExpression {id=61,slot_type=expression}
            |       |   |       |___Token:printf {id=107,slot_type=postfixExpression_4}
            |       |   |       |___(*) {id=63,slot_type=kleene_star__postfixExpression_2}
            |       |   |           |___postfixExpression_3 {id=64,slot_type=postfixExpression_3}
            |       |   |               |___Token:( {id=65,slot_type=LeftParen}
            |       |   |               |___(?) {id=66,slot_type=optional__postfixExpression_1}
            |       |   |               |   |___expression {id=68,slot_type=expression}
            |       |   |               |       |___(+) {id=105,slot_type=assignmentExpression}
            |       |   |               |       |   |___Token:"b=%d\n" {id=106,slot_type=StringLiteral}
            |       |   |               |       |___(*) {id=70,slot_type=kleene_star__expression_1}
            |       |   |               |           |___expression_2 {id=71,slot_type=expression_2}
            |       |   |               |               |___Token:, {id=72,slot_type=Comma}
            |       |   |               |               |___Token:b {id=89,slot_type=assignmentExpression}
            |       |   |               |___Token:) {id=67,slot_type=RightParen}
            |       |   |___Token:; {id=45,slot_type=Semi}
            |       |___jumpStatement {id=19,slot_type=blockItemList_2}
            |           |___alternative__jumpStatement_5 {id=20,slot_type=alternative__jumpStatement_5}
            |           |   |___Token:return {id=22,slot_type=Return}
            |           |   |___(?) {id=23,slot_type=optional__postfixExpression_1}
            |           |       |___Token:0 {id=41,slot_type=expression}
            |           |___Token:; {id=21,slot_type=Semi}
            |___Token:} {id=11,slot_type=RightBrace}
------------------------------------------------------------


==================Reducing node 2, size=54==================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
      return 0;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]remove whole except first
    int printf(const char*, ...);
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=5}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@1
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
      return 0;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 2
------------------------------------------------------------


==================Reducing node 5, size=54==================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
      return 0;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=5}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(const char*, ...);
      int a = 1;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(const char*, ...);
      int b = ((      ((a)) + 1  ));
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 5
------------------------------------------------------------


==================Reducing node 8, size=54==================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
      return 0;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 8
------------------------------------------------------------


=================Reducing node 10, size=54==================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
      return 0;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 10
------------------------------------------------------------


=================Reducing node 13, size=54==================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
      return 0;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=13}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]remove whole except first
    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@2
    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_plus]dd@1
    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

2 entries are removed: 8 --> 6.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 8
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@2
    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@1
    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@1
    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 13 from 54 to 51
------------------------------------------------------------


=================Reducing node 108, size=51=================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=108}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 108
------------------------------------------------------------


=================Reducing node 110, size=51=================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int                          ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 110
------------------------------------------------------------


=================Reducing node 113, size=51=================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=113}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b                        ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 113
------------------------------------------------------------


=================Reducing node 115, size=51=================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b                        ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 115
------------------------------------------------------------


=================Reducing node 116, size=51=================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=116}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 116
------------------------------------------------------------


=================Reducing node 268, size=51=================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(const char*, ...);
    int main                          {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(const char*, ...);
    int           argc                {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 268
------------------------------------------------------------


=================Reducing node 134, size=51=================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b =  (      ((a)) + 1  ) ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

6 entries are removed: 14 --> 8.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 10
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 134 from 51 to 49
------------------------------------------------------------


=================Reducing node 319, size=49=================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b =  (      ((a)) + 1  ) ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    int main (int argc, char *argv[]) {
      int a = 1;
      int b =  (      ((a)) + 1  ) ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 319
------------------------------------------------------------


=================Reducing node 270, size=49=================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b =  (      ((a)) + 1  ) ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int printf(const char*, ...);
    int main                          {
      int a = 1;
      int b =  (      ((a)) + 1  ) ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 270
------------------------------------------------------------


=================Reducing node 271, size=49=================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b =  (      ((a)) + 1  ) ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=271}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 271
------------------------------------------------------------


=================Reducing node 154, size=49=================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b =  (      ((a)) + 1  ) ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

3 entries are removed: 11 --> 8.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 3
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 154 from 49 to 47
------------------------------------------------------------


=================Reducing node 321, size=47=================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int                         ;
    int main (int argc, char *argv[]) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 321
------------------------------------------------------------


=================Reducing node 326, size=47=================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=326}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf                  ;
    int main (int argc, char *argv[]) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 326
------------------------------------------------------------


=================Reducing node 276, size=47=================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular_node]can be epsilon
    int printf(const char*, ...);
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int printf(const char*, ...);
    int main (int argc              ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int printf(const char*, ...);
    int main (          char *argv[]) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

9 entries are removed: 11 --> 2.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 5
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 276 from 47 to 39
------------------------------------------------------------


=================Reducing node 328, size=39=================

The current best program is the following

    int printf(const char*, ...);
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int printf                  ;
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 328
------------------------------------------------------------


=================Reducing node 329, size=39=================

The current best program is the following

    int printf(const char*, ...);
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=329}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 329
------------------------------------------------------------


=================Reducing node 169, size=39=================

The current best program is the following

    int printf(const char*, ...);
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(const char*, ...);
    int main (                      ) {
      int a = 1;
      int b =                 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(const char*, ...);
    int main (                      ) {
      int a = 1;
      int b =         ((a))        ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 169
------------------------------------------------------------


=================Reducing node 43, size=39==================

The current best program is the following

    int printf(const char*, ...);
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    int printf(const char*, ...);
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 43
------------------------------------------------------------


=================Reducing node 44, size=39==================

The current best program is the following

    int printf(const char*, ...);
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int printf(const char*, ...);
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
                         ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 44
------------------------------------------------------------


=================Reducing node 61, size=39==================

The current best program is the following

    int printf(const char*, ...);
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=61}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(const char*, ...);
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf             ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(const char*, ...);
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
             "b=%d\n", b ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 61
------------------------------------------------------------


=================Reducing node 333, size=39=================

The current best program is the following

    int printf(const char*, ...);
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular_node]can be epsilon
    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int printf(const char*     );
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

9 entries are removed: 10 --> 1.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 9
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 333 from 39 to 34
------------------------------------------------------------


=================Reducing node 233, size=34=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    int printf(                );
    int main (                      ) {
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 233
------------------------------------------------------------


=================Reducing node 184, size=34=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =          (a)  + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

3 entries are removed: 3 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 2
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 184 from 34 to 32
------------------------------------------------------------


=================Reducing node 63, size=32==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =          (a)  + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =          (a)  + 1    ;
      printf             ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 63
------------------------------------------------------------


=================Reducing node 64, size=32==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =          (a)  + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=64}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 64
------------------------------------------------------------


=================Reducing node 235, size=32=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =          (a)  + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int printf(                );
    int main (                      ) {
      int      ;
      int b =          (a)  + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 235
------------------------------------------------------------


=================Reducing node 238, size=32=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =          (a)  + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=238}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(                );
    int main (                      ) {
      int a    ;
      int b =          (a)  + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 238
------------------------------------------------------------


=================Reducing node 204, size=32=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =          (a)  + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

4 entries are removed: 4 --> 0.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 4
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 204 from 32 to 30
------------------------------------------------------------


=================Reducing node 66, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf(           );
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 66
------------------------------------------------------------


=================Reducing node 68, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=68}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n"   );
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf(          b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 68
------------------------------------------------------------


=================Reducing node 240, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int printf(                );
    int main (                      ) {
      int a    ;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 240
------------------------------------------------------------


=================Reducing node 241, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=241}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 241
------------------------------------------------------------


=================Reducing node 171, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a          ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 171
------------------------------------------------------------


=================Reducing node 172, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=172}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 172
------------------------------------------------------------


=================Reducing node 70, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n"   );
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 70
------------------------------------------------------------


=================Reducing node 71, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=71}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 71
------------------------------------------------------------


=================Reducing node 356, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 356
------------------------------------------------------------


=================Reducing node 359, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 359
------------------------------------------------------------


=================Reducing node 355, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 355
------------------------------------------------------------


=================Reducing node 332, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 332
------------------------------------------------------------


=================Reducing node 330, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 330
------------------------------------------------------------


=================Reducing node 322, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 322
------------------------------------------------------------


=================Reducing node 313, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 313
------------------------------------------------------------


=================Reducing node 274, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 274
------------------------------------------------------------


=================Reducing node 272, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 272
------------------------------------------------------------


=================Reducing node 264, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 264
------------------------------------------------------------


=================Reducing node 267, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 267
------------------------------------------------------------


=================Reducing node 263, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 263
------------------------------------------------------------


=================Reducing node 260, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 260
------------------------------------------------------------


=================Reducing node 242, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 242
------------------------------------------------------------


=================Reducing node 236, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 236
------------------------------------------------------------


=================Reducing node 229, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 229
------------------------------------------------------------


=================Reducing node 232, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 232
------------------------------------------------------------


=================Reducing node 228, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 228
------------------------------------------------------------


=================Reducing node 225, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 225
------------------------------------------------------------


=================Reducing node 180, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 180
------------------------------------------------------------


=================Reducing node 179, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 179
------------------------------------------------------------


=================Reducing node 117, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 117
------------------------------------------------------------


=================Reducing node 111, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 111
------------------------------------------------------------


=================Reducing node 107, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 107
------------------------------------------------------------


=================Reducing node 105, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 105
------------------------------------------------------------


=================Reducing node 106, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 106
------------------------------------------------------------


=================Reducing node 89, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 89
------------------------------------------------------------


=================Reducing node 72, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 72
------------------------------------------------------------


=================Reducing node 67, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 67
------------------------------------------------------------


=================Reducing node 65, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 65
------------------------------------------------------------


=================Reducing node 45, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 45
------------------------------------------------------------


=================Reducing node 11, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 11
------------------------------------------------------------


==================Reducing node 9, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 9
------------------------------------------------------------


==================Reducing node 6, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int printf(                );
        main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 6
------------------------------------------------------------


=================Reducing node 315, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=315}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 315
------------------------------------------------------------


=================Reducing node 318, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 318
------------------------------------------------------------


==================Reducing node 2, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]remove whole except first
    int printf(                );
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=5}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@1
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 2
------------------------------------------------------------


==================Reducing node 5, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=5}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(                );
      int a = 1;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(                );
      int b =           a   + 1    ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 5
------------------------------------------------------------


==================Reducing node 8, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 8
------------------------------------------------------------


=================Reducing node 10, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int printf(                );
    int main (                      ) {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 10
------------------------------------------------------------


=================Reducing node 13, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=13}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]remove whole except first
    int printf(                );
    int main (                      ) {
      int a = 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@1
    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@2
    int printf(                );
    int main (                      ) {
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@1
    int printf(                );
    int main (                      ) {
      int a = 1;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@1
    int printf(                );
    int main (                      ) {
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 13
------------------------------------------------------------


=================Reducing node 83, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=83}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 83
------------------------------------------------------------


=================Reducing node 18, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=18}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 18
------------------------------------------------------------


=================Reducing node 19, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
                         ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 19
------------------------------------------------------------


=================Reducing node 36, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=36}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf             ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
             "b=%d\n", b ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 36
------------------------------------------------------------


=================Reducing node 176, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=176}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 176
------------------------------------------------------------


=================Reducing node 128, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=128}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 128
------------------------------------------------------------


=================Reducing node 85, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int printf(                );
    int main (                      ) {
      int a = 1;
      int                          ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 85
------------------------------------------------------------


=================Reducing node 88, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=88}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(                );
    int main (                      ) {
      int a = 1;
      int b                        ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(                );
    int main (                      ) {
      int a = 1;
      int               a          ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 88
------------------------------------------------------------


=================Reducing node 38, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf             ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 38
------------------------------------------------------------


=================Reducing node 39, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=39}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 39
------------------------------------------------------------


=================Reducing node 90, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b                        ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 90
------------------------------------------------------------


=================Reducing node 91, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=91}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 91
------------------------------------------------------------


=================Reducing node 178, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int                         ;
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 178
------------------------------------------------------------


=================Reducing node 183, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=183}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf                  ;
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 183
------------------------------------------------------------


=================Reducing node 163, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(                );
    int main                          {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 163
------------------------------------------------------------


=================Reducing node 130, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int printf(                );
    int main (                      ) {
      int      ;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 130
------------------------------------------------------------


=================Reducing node 133, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=133}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int printf(                );
    int main (                      ) {
      int a    ;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 133
------------------------------------------------------------


=================Reducing node 104, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a          ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =                 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 104
------------------------------------------------------------


=================Reducing node 41, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf(           );
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 41
------------------------------------------------------------


=================Reducing node 43, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=43}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n"   );
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf(          b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 43
------------------------------------------------------------


=================Reducing node 185, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int printf                  ;
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 185
------------------------------------------------------------


=================Reducing node 186, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=186}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 186
------------------------------------------------------------


=================Reducing node 165, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int printf(                );
    int main                          {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 165
------------------------------------------------------------


=================Reducing node 166, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=166}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 166
------------------------------------------------------------


=================Reducing node 135, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int printf(                );
    int main (                      ) {
      int a    ;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 135
------------------------------------------------------------


=================Reducing node 136, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=136}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 136
------------------------------------------------------------


=================Reducing node 106, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a          ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 106
------------------------------------------------------------


=================Reducing node 107, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=107}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 107
------------------------------------------------------------


=================Reducing node 45, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n"   );
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 45
------------------------------------------------------------


=================Reducing node 46, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=46}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 46
------------------------------------------------------------


=================Reducing node 191, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 191
------------------------------------------------------------


=================Reducing node 194, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 194
------------------------------------------------------------


=================Reducing node 190, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 190
------------------------------------------------------------


=================Reducing node 189, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 189
------------------------------------------------------------


=================Reducing node 187, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 187
------------------------------------------------------------


=================Reducing node 179, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 179
------------------------------------------------------------


=================Reducing node 170, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 170
------------------------------------------------------------


=================Reducing node 169, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 169
------------------------------------------------------------


=================Reducing node 167, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 167
------------------------------------------------------------


=================Reducing node 159, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 159
------------------------------------------------------------


=================Reducing node 162, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 162
------------------------------------------------------------


=================Reducing node 158, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 158
------------------------------------------------------------


=================Reducing node 155, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 155
------------------------------------------------------------


=================Reducing node 137, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 137
------------------------------------------------------------


=================Reducing node 131, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 131
------------------------------------------------------------


=================Reducing node 124, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 124
------------------------------------------------------------


=================Reducing node 127, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 127
------------------------------------------------------------


=================Reducing node 123, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 123
------------------------------------------------------------


=================Reducing node 120, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 120
------------------------------------------------------------


=================Reducing node 115, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 115
------------------------------------------------------------


=================Reducing node 114, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 114
------------------------------------------------------------


=================Reducing node 92, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 92
------------------------------------------------------------


=================Reducing node 86, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 86
------------------------------------------------------------


=================Reducing node 82, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 82
------------------------------------------------------------


=================Reducing node 80, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 80
------------------------------------------------------------


=================Reducing node 81, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 81
------------------------------------------------------------


=================Reducing node 64, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 64
------------------------------------------------------------


=================Reducing node 47, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 47
------------------------------------------------------------


=================Reducing node 42, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 42
------------------------------------------------------------


=================Reducing node 40, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 40
------------------------------------------------------------


=================Reducing node 20, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 20
------------------------------------------------------------


=================Reducing node 11, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 11
------------------------------------------------------------


==================Reducing node 9, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 9
------------------------------------------------------------


==================Reducing node 6, size=30==================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int printf(                );
        main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 6
------------------------------------------------------------


=================Reducing node 172, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=172}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 172
------------------------------------------------------------


=================Reducing node 175, size=30=================

The current best program is the following

    int printf(                );
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 175
------------------------------------------------------------


#test success = 7
#test failure = 56
#test result cache hits = 16
#test execution cancelled = 3
#node edit action set cache hits = 37
