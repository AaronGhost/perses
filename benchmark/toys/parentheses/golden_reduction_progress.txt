======================Reduction starts======================

The spar tree is the following.
translationUnit {id=1}
|___(+) {id=2,slot_type=kleene_plus__translationUnit_3}
    |___declaration {id=346,slot_type=translationUnit_2}
    |   |___(+) {id=383,slot_type=declarationSpecifiers}
    |   |   |___Token:int {id=386,slot_type=declarationSpecifier}
    |   |___(?) {id=348,slot_type=optional__declaration_1}
    |   |   |___directDeclarator {id=353,slot_type=initDeclaratorList}
    |   |       |___Token:printf {id=382,slot_type=directDeclarator_8}
    |   |       |___(*) {id=355,slot_type=kleene_star__directDeclarator_6}
    |   |           |___directDeclarator_7 {id=356,slot_type=directDeclarator_7}
    |   |               |___Token:( {id=357,slot_type=LeftParen}
    |   |               |___parameterTypeList {id=360,slot_type=alternative__directDeclarator_9}
    |   |               |   |___parameterDeclaration {id=366,slot_type=parameterList}
    |   |               |   |   |___(+) {id=375,slot_type=declarationSpecifiers}
    |   |               |   |   |   |___Token:const {id=381,slot_type=declarationSpecifier}
    |   |               |   |   |   |___Token:char {id=379,slot_type=declarationSpecifier}
    |   |               |   |   |___(?) {id=369,slot_type=alternative__parameterDeclaration_2}
    |   |               |   |       |___Token:* {id=374,slot_type=abstractDeclarator}
    |   |               |   |___(?) {id=362,slot_type=optional__parameterTypeList_2}
    |   |               |       |___parameterTypeList_1 {id=363,slot_type=parameterTypeList_1}
    |   |               |           |___Token:, {id=364,slot_type=Comma}
    |   |               |           |___Token:... {id=365,slot_type=Ellipsis}
    |   |               |___Token:) {id=359,slot_type=RightParen}
    |   |___Token:; {id=349,slot_type=Semi}
    |___functionDefinition {id=6,slot_type=translationUnit_2}
        |___(?) {id=7,slot_type=optional__functionDefinition_1}
        |   |___(+) {id=341,slot_type=declarationSpecifiers}
        |       |___Token:int {id=344,slot_type=declarationSpecifier}
        |___directDeclarator {id=293,slot_type=declarator}
        |   |___Token:main {id=339,slot_type=directDeclarator_8}
        |   |___(*) {id=295,slot_type=kleene_star__directDeclarator_6}
        |       |___directDeclarator_7 {id=296,slot_type=directDeclarator_7}
        |           |___Token:( {id=297,slot_type=LeftParen}
        |           |___parameterList {id=301,slot_type=alternative__directDeclarator_9}
        |           |   |___(+) {id=331,slot_type=parameterDeclaration}
        |           |   |   |___Token:int {id=338,slot_type=declarationSpecifier}
        |           |   |   |___Token:argc {id=336,slot_type=declarationSpecifier}
        |           |   |___(*) {id=303,slot_type=kleene_star__parameterList_1}
        |           |       |___parameterList_2 {id=304,slot_type=parameterList_2}
        |           |           |___Token:, {id=305,slot_type=Comma}
        |           |           |___parameterDeclaration {id=306,slot_type=parameterDeclaration}
        |           |               |___(+) {id=325,slot_type=declarationSpecifiers}
        |           |               |   |___Token:char {id=328,slot_type=declarationSpecifier}
        |           |               |___declarator {id=309,slot_type=alternative__parameterDeclaration_2}
        |           |                   |___(?) {id=310,slot_type=optional__declarator_1}
        |           |                   |   |___Token:* {id=324,slot_type=pointer}
        |           |                   |___directDeclarator {id=311,slot_type=directDeclarator}
        |           |                       |___Token:argv {id=320,slot_type=directDeclarator_8}
        |           |                       |___(*) {id=313,slot_type=kleene_star__directDeclarator_6}
        |           |                           |___directDeclarator_7 {id=314,slot_type=directDeclarator_7}
        |           |                               |___Token:[ {id=315,slot_type=LeftBracket}
        |           |                               |___Token:] {id=317,slot_type=RightBracket}
        |           |___Token:) {id=299,slot_type=RightParen}
        |___compoundStatement {id=9,slot_type=compoundStatement}
            |___Token:{ {id=10,slot_type=LeftBrace}
            |___(?) {id=11,slot_type=optional__compoundStatement_1}
            |   |___(+) {id=14,slot_type=blockItemList}
            |       |___declaration {id=257,slot_type=blockItemList_2}
            |       |   |___(+) {id=289,slot_type=declarationSpecifiers}
            |       |   |   |___Token:int {id=292,slot_type=declarationSpecifier}
            |       |   |___(?) {id=259,slot_type=optional__declaration_1}
            |       |   |   |___initDeclarator {id=262,slot_type=initDeclaratorList}
            |       |   |       |___Token:a {id=288,slot_type=declarator}
            |       |   |       |___(?) {id=264,slot_type=optional__initDeclarator_2}
            |       |   |           |___initDeclarator_1 {id=265,slot_type=initDeclarator_1}
            |       |   |               |___Token:= {id=266,slot_type=Assign}
            |       |   |               |___Token:1 {id=285,slot_type=initializer}
            |       |   |___Token:; {id=260,slot_type=Semi}
            |       |___declaration {id=117,slot_type=blockItemList_2}
            |       |   |___(+) {id=252,slot_type=declarationSpecifiers}
            |       |   |   |___Token:int {id=255,slot_type=declarationSpecifier}
            |       |   |___(?) {id=119,slot_type=optional__declaration_1}
            |       |   |   |___initDeclarator {id=122,slot_type=initDeclaratorList}
            |       |   |       |___Token:b {id=251,slot_type=declarator}
            |       |   |       |___(?) {id=124,slot_type=optional__initDeclarator_2}
            |       |   |           |___initDeclarator_1 {id=125,slot_type=initDeclarator_1}
            |       |   |               |___Token:= {id=126,slot_type=Assign}
            |       |   |               |___primaryExpression {id=144,slot_type=initializer}
            |       |   |                   |___alternative__primaryExpression_3 {id=148,slot_type=alternative__primaryExpression_5}
            |       |   |                   |   |___Token:( {id=149,slot_type=LeftParen}
            |       |   |                   |   |___primaryExpression {id=167,slot_type=expression}
            |       |   |                   |       |___alternative__primaryExpression_3 {id=171,slot_type=alternative__primaryExpression_5}
            |       |   |                   |       |   |___Token:( {id=172,slot_type=LeftParen}
            |       |   |                   |       |   |___additiveExpression {id=184,slot_type=expression}
            |       |   |                   |       |       |___primaryExpression {id=201,slot_type=multiplicativeExpression}
            |       |   |                   |       |       |   |___alternative__primaryExpression_3 {id=205,slot_type=alternative__primaryExpression_5}
            |       |   |                   |       |       |   |   |___Token:( {id=206,slot_type=LeftParen}
            |       |   |                   |       |       |   |   |___primaryExpression {id=224,slot_type=expression}
            |       |   |                   |       |       |   |       |___alternative__primaryExpression_3 {id=228,slot_type=alternative__primaryExpression_5}
            |       |   |                   |       |       |   |       |   |___Token:( {id=229,slot_type=LeftParen}
            |       |   |                   |       |       |   |       |   |___Token:a {id=248,slot_type=expression}
            |       |   |                   |       |       |   |       |___Token:) {id=226,slot_type=RightParen}
            |       |   |                   |       |       |   |___Token:) {id=203,slot_type=RightParen}
            |       |   |                   |       |       |___(*) {id=186,slot_type=kleene_star__additiveExpression_1}
            |       |   |                   |       |           |___additiveExpression_2 {id=187,slot_type=additiveExpression_2}
            |       |   |                   |       |               |___Token:+ {id=196,slot_type=alternative__additiveExpression_3}
            |       |   |                   |       |               |___Token:1 {id=195,slot_type=multiplicativeExpression}
            |       |   |                   |       |___Token:) {id=169,slot_type=RightParen}
            |       |   |                   |___Token:) {id=146,slot_type=RightParen}
            |       |   |___Token:; {id=120,slot_type=Semi}
            |       |___expressionStatement {id=48,slot_type=blockItemList_2}
            |       |   |___(?) {id=49,slot_type=optional__postfixExpression_1}
            |       |   |   |___postfixExpression {id=66,slot_type=expression}
            |       |   |       |___Token:printf {id=115,slot_type=postfixExpression_4}
            |       |   |       |___(*) {id=68,slot_type=kleene_star__postfixExpression_2}
            |       |   |           |___postfixExpression_3 {id=69,slot_type=postfixExpression_3}
            |       |   |               |___Token:( {id=70,slot_type=LeftParen}
            |       |   |               |___(?) {id=71,slot_type=optional__postfixExpression_1}
            |       |   |               |   |___expression {id=73,slot_type=expression}
            |       |   |               |       |___(+) {id=112,slot_type=assignmentExpression}
            |       |   |               |       |   |___Token:"b=%d\n" {id=113,slot_type=StringLiteral}
            |       |   |               |       |___(*) {id=75,slot_type=kleene_star__expression_1}
            |       |   |               |           |___expression_2 {id=76,slot_type=expression_2}
            |       |   |               |               |___Token:, {id=77,slot_type=Comma}
            |       |   |               |               |___Token:b {id=95,slot_type=assignmentExpression}
            |       |   |               |___Token:) {id=72,slot_type=RightParen}
            |       |   |___Token:; {id=50,slot_type=Semi}
            |       |___jumpStatement {id=21,slot_type=blockItemList_2}
            |           |___alternative__jumpStatement_4 {id=24,slot_type=alternative__jumpStatement_5}
            |           |   |___Token:return {id=25,slot_type=Return}
            |           |   |___(?) {id=26,slot_type=optional__postfixExpression_1}
            |           |       |___Token:0 {id=45,slot_type=expression}
            |           |___Token:; {id=23,slot_type=Semi}
            |___Token:} {id=12,slot_type=RightBrace}
------------------------------------------------------------


==================Reducing node 2, size=54==================

The current best program is the following

    int printf(const char*, ...);
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
      return 0;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]remove whole except first
    int printf(const char*, ...);
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=6}
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_plus]dd@1
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
      return 0;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

1 entries are removed: 2 --> 1.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 2
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 2 from 54 to 44
------------------------------------------------------------


==================Reducing node 6, size=44==================

The current best program is the following

    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
      return 0;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int a = 1;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int b = ((      ((a)) + 1  ));
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 6
------------------------------------------------------------


==================Reducing node 9, size=44==================

The current best program is the following

    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
      return 0;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 9
------------------------------------------------------------


=================Reducing node 11, size=44==================

The current best program is the following

    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
      return 0;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int main (int argc, char *argv[]) {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 11
------------------------------------------------------------


=================Reducing node 14, size=44==================

The current best program is the following

    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
      return 0;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=14}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]remove whole except first
    int main (int argc, char *argv[]) {
      int a = 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@2
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_plus]dd@1
    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

1 entries are removed: 7 --> 6.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 6
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@2
    int main (int argc, char *argv[]) {
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@1
    int main (int argc, char *argv[]) {
      int a = 1;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@1
    int main (int argc, char *argv[]) {
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 14 from 44 to 41
------------------------------------------------------------


=================Reducing node 117, size=41=================

The current best program is the following

    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=117}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 117
------------------------------------------------------------


=================Reducing node 119, size=41=================

The current best program is the following

    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int main (int argc, char *argv[]) {
      int a = 1;
      int                          ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 119
------------------------------------------------------------


=================Reducing node 122, size=41=================

The current best program is the following

    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=122}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main (int argc, char *argv[]) {
      int a = 1;
      int b                        ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 122
------------------------------------------------------------


=================Reducing node 124, size=41=================

The current best program is the following

    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main (int argc, char *argv[]) {
      int a = 1;
      int b                        ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 124
------------------------------------------------------------


=================Reducing node 125, size=41=================

The current best program is the following

    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=125}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 125
------------------------------------------------------------


=================Reducing node 293, size=41=================

The current best program is the following

    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main                          {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int           argc                {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 293
------------------------------------------------------------


=================Reducing node 144, size=41=================

The current best program is the following

    int main (int argc, char *argv[]) {
      int a = 1;
      int b = ((      ((a)) + 1  ));
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    int main (int argc, char *argv[]) {
      int a = 1;
      int b =  (      ((a)) + 1  ) ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

1 entries are removed: 14 --> 13.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 10
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 144 from 41 to 39
------------------------------------------------------------


=================Reducing node 295, size=39=================

The current best program is the following

    int main (int argc, char *argv[]) {
      int a = 1;
      int b =  (      ((a)) + 1  ) ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int main                          {
      int a = 1;
      int b =  (      ((a)) + 1  ) ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 295
------------------------------------------------------------


=================Reducing node 296, size=39=================

The current best program is the following

    int main (int argc, char *argv[]) {
      int a = 1;
      int b =  (      ((a)) + 1  ) ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=296}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 296
------------------------------------------------------------


=================Reducing node 167, size=39=================

The current best program is the following

    int main (int argc, char *argv[]) {
      int a = 1;
      int b =  (      ((a)) + 1  ) ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    int main (int argc, char *argv[]) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

1 entries are removed: 15 --> 14.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 2
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 167 from 39 to 37
------------------------------------------------------------


=================Reducing node 301, size=37=================

The current best program is the following

    int main (int argc, char *argv[]) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular_node]can be epsilon
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main (int argc              ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Test script execution is cancelled.=============

It took less than 1 second to cancel the task.

    int main (          char *argv[]) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

7 entries are removed: 15 --> 8.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 3
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 301 from 37 to 29
------------------------------------------------------------


=================Reducing node 184, size=29=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main (                      ) {
      int a = 1;
      int b =                 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main (                      ) {
      int a = 1;
      int b =         ((a))        ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 184
------------------------------------------------------------


=================Reducing node 48, size=29==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 48
------------------------------------------------------------


=================Reducing node 49, size=29==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
                         ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 49
------------------------------------------------------------


=================Reducing node 66, size=29==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=66}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf             ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
             "b=%d\n", b ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 66
------------------------------------------------------------


=================Reducing node 257, size=29=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    int main (                      ) {
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 257
------------------------------------------------------------


=================Reducing node 201, size=29=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =         ((a)) + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    int main (                      ) {
      int a = 1;
      int b =          (a)  + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

3 entries are removed: 16 --> 13.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 8
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 201 from 29 to 27
------------------------------------------------------------


=================Reducing node 68, size=27==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =          (a)  + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int main (                      ) {
      int a = 1;
      int b =          (a)  + 1    ;
      printf             ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 68
------------------------------------------------------------


=================Reducing node 69, size=27==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =          (a)  + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=69}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 69
------------------------------------------------------------


=================Reducing node 259, size=27=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =          (a)  + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int main (                      ) {
      int      ;
      int b =          (a)  + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 259
------------------------------------------------------------


=================Reducing node 262, size=27=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =          (a)  + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=262}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main (                      ) {
      int a    ;
      int b =          (a)  + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 262
------------------------------------------------------------


=================Reducing node 224, size=27=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =          (a)  + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [regular node]compatible replacement
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

4 entries are removed: 17 --> 13.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 4
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 224 from 27 to 25
------------------------------------------------------------


=================Reducing node 71, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf(           );
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 71
------------------------------------------------------------


=================Reducing node 73, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=73}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n"   );
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf(          b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 73
------------------------------------------------------------


=================Reducing node 264, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int main (                      ) {
      int a    ;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 264
------------------------------------------------------------


=================Reducing node 265, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=265}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 265
------------------------------------------------------------


=================Reducing node 186, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int main (                      ) {
      int a = 1;
      int b =           a          ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 186
------------------------------------------------------------


=================Reducing node 187, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=187}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 187
------------------------------------------------------------


=================Reducing node 75, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n"   );
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 75
------------------------------------------------------------


=================Reducing node 76, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=76}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 76
------------------------------------------------------------


=================Reducing node 339, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 339
------------------------------------------------------------


=================Reducing node 299, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 299
------------------------------------------------------------


=================Reducing node 297, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 297
------------------------------------------------------------


=================Reducing node 289, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 289
------------------------------------------------------------


=================Reducing node 292, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 292
------------------------------------------------------------


=================Reducing node 288, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 288
------------------------------------------------------------


=================Reducing node 285, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 285
------------------------------------------------------------


=================Reducing node 266, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 266
------------------------------------------------------------


=================Reducing node 260, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 260
------------------------------------------------------------


=================Reducing node 252, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 252
------------------------------------------------------------


=================Reducing node 255, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 255
------------------------------------------------------------


=================Reducing node 251, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 251
------------------------------------------------------------


=================Reducing node 248, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 248
------------------------------------------------------------


=================Reducing node 196, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 196
------------------------------------------------------------


=================Reducing node 195, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 195
------------------------------------------------------------


=================Reducing node 126, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 126
------------------------------------------------------------


=================Reducing node 120, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 120
------------------------------------------------------------


=================Reducing node 115, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 115
------------------------------------------------------------


=================Reducing node 112, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 112
------------------------------------------------------------


=================Reducing node 113, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 113
------------------------------------------------------------


=================Reducing node 95, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 95
------------------------------------------------------------


=================Reducing node 77, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 77
------------------------------------------------------------


=================Reducing node 72, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 72
------------------------------------------------------------


=================Reducing node 70, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 70
------------------------------------------------------------


=================Reducing node 50, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50
------------------------------------------------------------


=================Reducing node 12, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 12
------------------------------------------------------------


=================Reducing node 10, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 10
------------------------------------------------------------


==================Reducing node 7, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 7
------------------------------------------------------------


=================Reducing node 341, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=341}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 341
------------------------------------------------------------


=================Reducing node 344, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 344
------------------------------------------------------------


==================Reducing node 2, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 2
------------------------------------------------------------


==================Reducing node 5, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int a = 1;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int b =           a   + 1    ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 5
------------------------------------------------------------


==================Reducing node 8, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 8
------------------------------------------------------------


=================Reducing node 10, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int main (                      ) {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 10
------------------------------------------------------------


=================Reducing node 13, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=13}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]remove whole except first
    int main (                      ) {
      int a = 1;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@1
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@2
    int main (                      ) {
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@1
    int main (                      ) {
      int a = 1;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@1
    int main (                      ) {
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 13
------------------------------------------------------------


=================Reducing node 88, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=88}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 88
------------------------------------------------------------


=================Reducing node 19, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=19}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 19
------------------------------------------------------------


=================Reducing node 20, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
                         ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 20
------------------------------------------------------------


=================Reducing node 37, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=37}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf             ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
             "b=%d\n", b ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 37
------------------------------------------------------------


=================Reducing node 136, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=136}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 136
------------------------------------------------------------


=================Reducing node 90, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int main (                      ) {
      int a = 1;
      int                          ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 90
------------------------------------------------------------


=================Reducing node 93, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=93}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main (                      ) {
      int a = 1;
      int b                        ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main (                      ) {
      int a = 1;
      int               a          ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 93
------------------------------------------------------------


=================Reducing node 39, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf             ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 39
------------------------------------------------------------


=================Reducing node 40, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=40}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 40
------------------------------------------------------------


=================Reducing node 95, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main (                      ) {
      int a = 1;
      int b                        ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 95
------------------------------------------------------------


=================Reducing node 96, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=96}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 96
------------------------------------------------------------


=================Reducing node 172, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    int main                          {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 172
------------------------------------------------------------


=================Reducing node 138, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    int main (                      ) {
      int      ;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 138
------------------------------------------------------------


=================Reducing node 141, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=141}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main (                      ) {
      int a    ;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 141
------------------------------------------------------------


=================Reducing node 109, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main (                      ) {
      int a = 1;
      int b =           a          ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main (                      ) {
      int a = 1;
      int b =                 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 109
------------------------------------------------------------


=================Reducing node 42, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf(           );
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 42
------------------------------------------------------------


=================Reducing node 44, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=44}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n"   );
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf(          b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 44
------------------------------------------------------------


=================Reducing node 174, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main                          {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 174
------------------------------------------------------------


=================Reducing node 175, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=175}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 175
------------------------------------------------------------


=================Reducing node 143, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main (                      ) {
      int a    ;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 143
------------------------------------------------------------


=================Reducing node 144, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=144}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 144
------------------------------------------------------------


=================Reducing node 111, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main (                      ) {
      int a = 1;
      int b =           a          ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 111
------------------------------------------------------------


=================Reducing node 112, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=112}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 112
------------------------------------------------------------


=================Reducing node 46, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n"   );
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 46
------------------------------------------------------------


=================Reducing node 47, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=47}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 47
------------------------------------------------------------


=================Reducing node 179, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 179
------------------------------------------------------------


=================Reducing node 178, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 178
------------------------------------------------------------


=================Reducing node 176, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 176
------------------------------------------------------------


=================Reducing node 168, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 168
------------------------------------------------------------


=================Reducing node 171, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 171
------------------------------------------------------------


=================Reducing node 167, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 167
------------------------------------------------------------


=================Reducing node 164, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 164
------------------------------------------------------------


=================Reducing node 145, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 145
------------------------------------------------------------


=================Reducing node 139, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 139
------------------------------------------------------------


=================Reducing node 131, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 131
------------------------------------------------------------


=================Reducing node 134, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 134
------------------------------------------------------------


=================Reducing node 130, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 130
------------------------------------------------------------


=================Reducing node 127, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 127
------------------------------------------------------------


=================Reducing node 121, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 121
------------------------------------------------------------


=================Reducing node 120, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 120
------------------------------------------------------------


=================Reducing node 97, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 97
------------------------------------------------------------


=================Reducing node 91, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 91
------------------------------------------------------------


=================Reducing node 86, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 86
------------------------------------------------------------


=================Reducing node 83, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 83
------------------------------------------------------------


=================Reducing node 84, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 84
------------------------------------------------------------


=================Reducing node 66, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 66
------------------------------------------------------------


=================Reducing node 48, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 48
------------------------------------------------------------


=================Reducing node 43, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 43
------------------------------------------------------------


=================Reducing node 41, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 41
------------------------------------------------------------


=================Reducing node 21, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 21
------------------------------------------------------------


=================Reducing node 11, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 11
------------------------------------------------------------


==================Reducing node 9, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 9
------------------------------------------------------------


==================Reducing node 6, size=25==================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 6
------------------------------------------------------------


=================Reducing node 181, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=181}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 181
------------------------------------------------------------


=================Reducing node 184, size=25=================

The current best program is the following

    int main (                      ) {
      int a = 1;
      int b =           a   + 1    ;
      printf("b=%d\n", b);
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 184
------------------------------------------------------------


#test success = 7
#test failure = 45
#test result cache hits = 17
#test execution cancelled = 2
#node edit action set cache hits = 29
